generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  PENDING
  APPROVED
  REJECTED
}

enum Role {
  USER
  ADMIN
}

enum BorrowStatus {
  BORROWED
  RETURNED
}

model User {
  id               String         @id @unique @default(uuid())
  fullName         String
  email            String         @unique
  universityId     Int            @unique
  password         String
  universityCard   String
  status           Status         @default(PENDING)
  role             Role           @default(USER)
  lastActivityDate DateTime       @default(now())
  createdAt        DateTime       @default(now())
  borrowRecords    BorrowRecord[]
}

model Book {
  id              String         @id @unique @default(uuid())
  title           String         @db.VarChar(255)
  author          String         @db.VarChar(255)
  genre           String
  rating          Int
  coverUrl        String
  coverColor      String         @db.VarChar(7)
  description     String
  totalCopies     Int            @default(1)
  availableCopies Int            @default(0)
  videoUrl        String
  summary         String
  createdAt       DateTime       @default(now())
  borrowRecords   BorrowRecord[]
}

model BorrowRecord {
  id         String       @id @unique @default(uuid())
  userId     String
  bookId     String
  borrowDate DateTime     @default(now())
  dueDate    DateTime
  returnDate DateTime?
  status     BorrowStatus @default(BORROWED)
  createdAt  DateTime     @default(now())

  user User @relation(fields: [userId], references: [id])
  book Book @relation(fields: [bookId], references: [id])
}
